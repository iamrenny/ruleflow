buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'application'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id "io.gitlab.arturbosch.detekt" version '1.0.0.M11'
}

apply plugin: 'application'
apply plugin: 'org.jetbrains.kotlin.jvm'
apply plugin: 'io.gitlab.arturbosch.detekt'
apply plugin: 'com.github.johnrengelman.shadow'

repositories {
    mavenCentral()
    jcenter()
    maven { url "https://plugins.gradle.org/m2/" }
}

sourceCompatibility = 1.8
compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

group 'com.rappi'
version '1.0'

mainClassName = 'com.rappi.fraud.rules.ApplicationKt'

configurations {
    ktlint
}

sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/kotlin')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

dependencies {
    compile group: 'io.gitlab.arturbosch.detekt', name: 'detekt-gradle-plugin', version: '1.0.0.M11'

    compile group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8', version: kotlin_version
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

    compile group: 'io.vertx', name: 'vertx-jdbc-client', version: vertx_version
    compile group: 'net.snowflake', name: 'snowflake-jdbc', version: '3.0.0'
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.3.2'

    compile group: "io.vertx", name: "vertx-core", version: vertx_version
    compile group: "io.vertx", name: "vertx-web", version: vertx_version
    compile group: "io.vertx", name: "vertx-web-client", version: vertx_version
    compile group: "io.vertx", name: "vertx-rx-java2", version: vertx_version
    compile group: "io.vertx", name: "vertx-config", version: vertx_version
    compile group: "io.vertx", name: "vertx-config-yaml", version: vertx_version
    compile group: "io.vertx", name: "vertx-rx-java2", version: vertx_version
    compile group: "io.vertx", name: "vertx-redis-client", version: vertx_version

    compile 'org.kie:kie-spring:7.24.0.Final'

    compile group: "com.google.inject", name: "guice", version: "4.2.0"

    compile group: 'io.reactiverse', name: 'reactive-pg-client', version: '0.11.1'
    compile group: 'io.github.resilience4j', name: 'resilience4j-rxjava2', version: '0.17.0'
    compile group: 'io.github.resilience4j', name: 'resilience4j-ratelimiter', version: '0.17.0'

    compile group: "org.flywaydb", name: "flyway-core", version: "5.2.4"
    compile group: "org.postgresql", name: "postgresql", version: "42.2.4"

    compile group: "ch.qos.logback", name: "logback-classic", version: "1.2.3"
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-module-kotlin', version: '2.9.6'
    compile group: 'com.fasterxml.jackson.module', name: 'jackson-modules-java8', version: '2.9.6'
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.6'

    compile group: "com.hubrick.vertx", name: "vertx-s3-client", version: "3.3.3"

    compile group: 'com.newrelic.agent.java', name: 'newrelic-api', version: '4.9.0'
    compile group: 'javax.xml.bind', name: 'jaxb-api', version: '2.2.4'
    compile group: 'com.sun.xml.bind', name: 'jaxb-impl', version: '2.2.3-1'
    compile group: 'javax.activation', name: 'activation', version: '1.1.1'

    testCompile group: "io.vertx", name: "vertx-junit5", version: vertx_version
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "5.3.2"
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-params", version: "5.3.2"
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.27.0'
    testCompile group: "org.mockito", name: "mockito-core", version: "2.27.0"
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
    
    implementation project(':rules-interpreter')
    
    ktlint "com.pinterest:ktlint:0.34.2"

    integrationTestCompile configurations.testCompile
    integrationTestRuntime configurations.testRuntime
    integrationTestImplementation configurations.implementation
}

test {
    environment "ENV", "test"

    useJUnitPlatform()

    testLogging {
        showStandardStreams = true
        events = ["passed", "skipped", "failed"]
    }
}

task integrationTest(type: Test) {
    environment "ENV", "test"

    useJUnitPlatform()

    group = LifecycleBasePlugin.VERIFICATION_GROUP
    description = 'Runs integration tests'
    setTestClassesDirs sourceSets.integrationTest.output
    classpath = sourceSets.integrationTest.runtimeClasspath
    testLogging {
        events = ["passed", "failed", "skipped"]
    }
    failFast = true
    outputs.upToDateWhen { false }
}

test.dependsOn(integrationTest)

shadowJar {
    setArchiveBaseName('fraud-rules-engine')
    setArchiveClassifier('shadow')
    zip64 = true
}

tasks.build.dependsOn tasks.shadowJar

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "src/**/*.kt"
    // to generate report in checkstyle format prepend following args:
    // "--reporter=plain", "--reporter=checkstyle,output=${buildDir}/ktlint.xml"
    // see https://github.com/pinterest/ktlint#usage for more
}

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    main = "com.pinterest.ktlint.Main"
    classpath = configurations.ktlint
    args "-F", "src/**/*.kt"
}

check.dependsOn ktlint
ktlint.dependsOn ktlintFormat

detekt {
    config = files("$rootDir/detekt-config.yml")
    filters = ".*build.*,.*/resources/.*,.*/tmp/.*"
    baseline = file("detekt-baseline.xml")
}