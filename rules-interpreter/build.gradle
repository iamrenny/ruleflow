buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm"
    id 'antlr'
}

apply plugin: "kotlin"
apply plugin: 'antlr'

group 'com.rappi'

version '1.0'
repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.allWarningsAsErrors = false
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.allWarningsAsErrors = false
}


dependencies {
    antlr "org.antlr:antlr4:$antlr_version"

    implementation "org.antlr:antlr4-runtime:$antlr_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    testCompile "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testCompile "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testCompile "org.mockito:mockito-junit-jupiter:$mockito_version"
    testCompile "org.mockito:mockito-core:$mockito_version"
    testCompile "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"
}

test {
    environment "ENV", "test"

    useJUnitPlatform()

    // Show test results.
    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"

    }
}

generateGrammarSource {
    arguments += ["-visitor", "-long-messages"]
}

compileKotlin.dependsOn(generateGrammarSource)