buildscript {
    ext.kotlin_version = '1.3.41'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm"
    id 'antlr'
}

apply plugin: "kotlin"
apply plugin: 'antlr'

group 'com.rappi'

version '1.0'
repositories {
    mavenCentral()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.allWarningsAsErrors = false
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
    kotlinOptions.allWarningsAsErrors = false
}


dependencies {
    antlr "org.antlr:antlr4:4.7.2"
    implementation "org.antlr:antlr4-runtime:4.7.2"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    compile group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: '1.3.41'

    testCompile group: "org.junit.jupiter", name: "junit-jupiter-engine", version: "5.3.2"
    testCompile group: "org.junit.jupiter", name: "junit-jupiter-params", version: "5.3.2"
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: '2.27.0'
    testCompile group: "org.mockito", name: "mockito-core", version: "2.27.0"
    testCompile group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
}


test {
    environment "ENV", "test"

    useJUnitPlatform()

    // Show test results.
    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"

    }
}

generateGrammarSource {
    arguments += ["-visitor", "-long-messages"]
}

compileKotlin.dependsOn(generateGrammarSource)